def mock():
    mock_starter_message = "This is mock data. Thank you for your interest in joining Cohere as a Software Engineer. Based on your resume, I can see that you have experience in various programming languages such as Python, Typescript, and Rust. One of our key focuses at Cohere is AI and NLP, so my question to you is: \n\nCan you discuss a project from your resume where you utilized your skills in Python and Typescript to work on an AI-integrated productivity visualization workspace with the Cohere API?"
    
    mock_evaluation_message = "Strengths:\n- The mock data response provides a clear and concise overview of the technologies used in the project, including Python, Django, Typescript, React, and MongoDB.\n- The applicant highlights the specific uses of each technology, such as Python for backend development and Django for server-side logic.\n\nAreas for Improvement:\n- The response does not directly address the question about the integration of AI technology and the benefits it brought to the productivity visualization workspace. It would be helpful to provide more specific information about how AI was incorporated into the project and how it enhanced productivity visualization.\n- It would also be beneficial to mention any specific challenges faced in integrating AI and how they were overcome."

    mock_ordered_content = "Beginning of mock data. Amol Venkataraman can be reached at +1 (647) 562 4178 or via email at avenkata@uwaterloo.ca. He is also available on LinkedIn, GitHub, and has a personal website.\n///BREAK///\nThe individual holds a Bachelors - Honours degree in Computer Science from the University of Waterloo, with an anticipated graduation year of 2027. They achieved a cumulative GPA of 3.86 out of 4.0. Their coursework includes Functional and imperative programming, Racket, C, and Linux.\n\nIn terms of skills, the individual is proficient in several programming languages such as Python, Java, C, C++, HTML, CSS, JS, Ruby, and Racket. They also have experience working with various frameworks including Flask, Django, FastAPI, Rails, OpenCV, MediaPipe, TensorFlow, Keras, Numpy, Pandas, Scikit-Learn, Matplotlib, and Bootstrap. Additionally, they are familiar with tools such as Linux, Git, Bash, Docker, Postman, AWS, Google Cloud, Azure, Postgres, Redis, Gradle, and Maven.\n\nIn their experience, the individual worked as a Web Developer at the University of Waterloo, where they created admin pages for the Rhetoricon DB website using React and integrated data from a Go server. They also worked as a Future Tech Intern at Nokia, where they gained valuable industry experience.\n\nOverall, the individual possesses a strong educational background in Computer Science and has acquired a wide range of technical skills and experience through various projects and internships.\n///BREAK///\nThe individual worked on software testing and wrote code to test the Network Services Platform. They created a Python script using Locust and Greenlet to load test servers, significantly increasing the number of requests. Additionally, they optimized old Javascript Selenium tests to make them run faster. \n\nAs a Part-Time Intern at Tilda Research, they added filter-based search to a Ruby-on-Rails patient management system, improving search speed for administrators. They also improved the UI to reduce load times and enhance the visual appeal of web pages. \n\nIn their projects, they created an innovative web-based calendar app that integrates information from various sources using APIs, aiding in time management. They also developed a self-hosted photo gallery app that utilizes deep neural networks for image search based on people, places, things, and text. Moreover, they trained a neural network and created a program to control a computer through hand gestures. \n\nLastly, they contributed to Singularity, a GitHub project, by developing a command-line script to download content from Google Classroom and Brightspace using their APIs. End of mock data"

    return {
        "starter_message": mock_starter_message,
        "evaluation_message": mock_evaluation_message,
        "ordered_content": mock_ordered_content
    }


